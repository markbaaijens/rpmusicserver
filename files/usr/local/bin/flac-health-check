#!/bin/bash

log () {
    echo "$1"
    echo "$(date "+%Y-%m-%d") $(date +%H:%M:%S) $1"  >> $log_dir/flac-health.log
}

if [ -z "$(whoami | grep root)" ]; then
    echo "Not running as root."
    exit
fi

# TODO Check if process is running
#if [ -z "$(ps -ef | grep 'flac-health-check' | grep -v grep)" ]; then
#    echo "Process is already running, exit"
#    exit
#fi

if [ -d "/media/usbdata/rpms/logs" ]; then
    log_dir="/media/usbdata/rpms/logs"
else
    log_dir="."    
fi

rm -f $log_dir/flac-health-progress.log
rm -f $log_dir/flac-health-error.log

source_folder=$(jq '.sourcefolder' /media/usbdata/rpms/config/transcoder-settings.json | tr -d '"')
if [ "$source_folder" == "null" ] || [ -z "${source_folder}" ]; then
    source_folder="/media/usbdata/user/music"
fi

source_folder="/home/mark/Temp/flactest"

log "Start session on '$source_folder'"

# TODO Check if root-folder exists

repair_file="repair.sh"
previous_dir=""
current_dir=""
IFS=$'\n'; set -f  # Work-a-round for spaces in file- or folder-names
for file in $(find $source_folder -type f -name '*.flac' -printf '%p\n' | sort -k1); do
    file_name="$(basename "${file}")"

    current_dir="$(dirname "${file}")"
    if [ "$previous_dir" != "$current_dir" ]; then
        previous_dir=$current_dir
        log ""
        log $current_dir
        rm -f $current_dir/$repair_file
    fi

    log "$file_name"

    flac_error=`flac --silent -t "$file" 2>&1`
    if [ -n "$flac_error" ]; then
        if [ ! -f $current_dir/$repair_file ]; then
            echo "" >> $current_dir/$repair_file
            chmod +x $current_dir/$repair_file
            log " => Created '$repair_file' in $current_dir"
        fi

        log " => $file"
        log " => $flac_error"

        echo "# $flac_error" >> $current_dir/$repair_file
        if [[ $flac_error == *"WARNING, cannot check MD5 signature since it was unset in the STREAMINFO"* ]]; then
            echo "flac -f \"$file_name\" -o \"$file_name\"" >> $current_dir/$repair_file
            echo "touch \"$file_name\"" >> $current_dir/$repair_file            
        else
            echo "# No repair implemented (yet) for this error/warning"
        fi
        echo "" >> $current_dir/$repair_file        
    fi
done
unset IFS; set +f

IFS=$'\n'; set -f  # Work-a-round for spaces in file- or folder-names
log ""
log "Created '$repair_file' in:"
for file in $(find $source_folder -type f -name 'repair.sh' -printf '%p\n' | sort -k1); do
    current_dir="$(dirname "${file}")"
    log $current_dir
done
unset IFS; set +f

log ""
log "End session"

