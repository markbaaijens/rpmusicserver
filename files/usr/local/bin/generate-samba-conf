#!/bin/bash

if [ -z "$(whoami | grep root)" ]; then
    echo "Not running as root."
    exit
fi

generate_share () {
    echo "[$1]" >> $temp_conf
    echo "comment = $1" >> $temp_conf
    echo "path = $2" >> $temp_conf
    echo "available = yes" >> $temp_conf
    echo "guest ok = yes" >> $temp_conf
    echo "browseable = yes" >> $temp_conf
    echo "writable = $3" >> $temp_conf
    echo "create mask = 0666" >> $temp_conf
    echo "directory mask = 0777" >> $temp_conf
    echo "" >> $temp_conf    
}

samba_conf=/etc/samba/smb.conf
temp_conf=/tmp/smb.conf

rm $temp_conf -f

echo "[global]" >> $temp_conf
echo "workgroup = workgroup" >> $temp_conf
echo "server string = %h (Samba, Linux)" >> $temp_conf
echo "server role = standalone" >> $temp_conf
echo "security = user" >> $temp_conf
echo "unix extensions = no" >> $temp_conf
echo "multicast dns register = yes" >> $temp_conf
echo "" >> $temp_conf

public_share_name="Public"
music_share_name="Music"
downloads_share_name="Downloads"
backup_share_name="Backup"

if [ -f /media/usbdata/rpms/config/translations.json ]; then
    public_share_name=$(jq '.PublicShareName' /media/usbdata/rpms/config/translations.json | tr -d '"')
    music_share_name=$(jq '.MusicShareName' /media/usbdata/rpms/config/translations.json | tr -d '"')
    downloads_share_name=$(jq '.DownloadsShareName' /media/usbdata/rpms/config/translations.json | tr -d '"')        
    backup_share_name=$(jq '.BackupShareName' /media/usbdata/rpms/config/translations.json | tr -d '"')
fi

generate_share "$public_share_name" "/media/usbdata/user/public" "yes"
generate_share "$music_share_name" "/media/usbdata/user/music" "yes"
generate_share "$downloads_share_name" "/media/usbdata/user/downloads" "no"
generate_share "$backup_share_name" "/media/usbbackup" "no"

rm $samba_conf -f
cp $temp_conf $samba_conf
rm $temp_conf -f

service smbd restart  
service nmbd restart
